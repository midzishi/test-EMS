## Autogenerated by libunwind configuration.
# Do not edit!

import os
import site

config.cxx_under_test           = "/usr/bin/c++"
config.project_obj_root         = "/llvm-project-release-12.x/build"
config.libunwind_src_root       = "/llvm-project-release-12.x/libunwind"
config.libunwind_obj_root       = "/llvm-project-release-12.x/build/projects/libunwind"
config.abi_library_path         = "/llvm-project-release-12.x/build/./lib"
config.libcxx_src_root          = "/llvm-project-release-12.x/libunwind/../libcxx"
config.libunwind_headers        = "/llvm-project-release-12.x/libunwind/include"
config.cxx_library_root         = ""
config.llvm_unwinder            = True
config.builtins_library         = ""
config.enable_threads           = True
config.use_sanitizer            = ""
config.enable_32bit             = False
config.target_info              = "libcxx.test.target_info.LocalTI"
config.test_linker_flags        = ""
config.test_compiler_flags      = ""
config.executor                 = "/usr/bin/python3.5 /llvm-project-release-12.x/libunwind/../libcxx/utils/run.py"
config.libunwind_shared         = True
config.enable_shared            = True
config.arm_ehabi                = False
config.host_triple              = "x86_64-unknown-linux-gnu"
config.target_triple            = "x86_64-unknown-linux-gnu"
config.sysroot                  = ""
config.gcc_toolchain            = ""
config.cxx_ext_threads          = False

site.addsitedir(os.path.join(config.libunwind_src_root, 'test'))
site.addsitedir(os.path.join(config.libcxx_src_root, 'utils'))

# name: The name of this test suite.
config.name = 'libunwind'

# suffixes: A list of file extensions to treat as test files.
config.suffixes = ['.cpp', '.s']

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.join(config.libunwind_src_root, 'test')

# Allow expanding substitutions that are based on other substitutions
config.recursiveExpansionLimit = 10

# Infer the test_exec_root from the build directory.
config.test_exec_root = os.path.join(config.libunwind_obj_root, 'test')

import libcxx.test.format
config.test_format = libcxx.test.format.CxxStandardLibraryTest()

lit_config.note('Using configuration variant: libunwind')
import libunwind.test.config
configuration = libunwind.test.config.Configuration(lit_config, config)
configuration.configure()
configuration.print_config_info()
